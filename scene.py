from pyparsing import White
from manim import *
import numpy as np
import math
# let F(x,y)=<y,x>
class ConsVec(Scene):#Animation for how potential difference is constant regardless of path over a conservative vector field
    def construct(self):
        v1 = VGroup()
        plane=NumberPlane().scale(0.5).shift(LEFT*3.5)
        self.add(plane)
        for i in range(-7,7):
            for j in range(-3,3):
                if (i==-2 and j==2):
                    continue
                vecs = Vector(np.array([j/8,i/8]),color=YELLOW)
                p1 = Dot(RIGHT*((i)/2+j/16)+UP*(j/2+i/16)+LEFT*3.5)
                vecs.move_to(p1)
                self.add(vecs)
                v1.add(*vecs)
        tex1 = Tex(r"Say we had the following conservative vector field: $\vec{F}=y \hat{i}+ x\hat{j}$",font_size=20).shift(3*RIGHT+2*UP)
        tex2 = Tex(r"Then the vector field would be depicted as to the left",font_size=20).shift(3*RIGHT+UP)
        self.play(Write(tex1),run_time=2)
        self.play(Write(tex2),run_time=2)
        self.wait(6)
        tex5=Tex(r"Now say we took the following path integral $\int_{(-2,2)_{p_{1}}}^{(0,0)} \vec{F} dr$",font_size=20).shift(3*RIGHT)
        tex6=Tex(r"Where $p_{1}$ is the straight line path from (-2,2) to (0,0)",font_size=20).shift(3*RIGHT+DOWN)
        self.play(Write(tex5))
        self.wait(3)
        self.play(Write(tex6))
        self.wait(3)
        self.play(Uncreate(VGroup(*tex1,*tex2,*tex5,*tex6)))
        dot = Dot(-2*RIGHT/2+2*UP/2+LEFT*3.5,color=YELLOW)
        line = Line(start=np.array([-4.5,1,0]),end=np.array([-3.5,0,0]))
        self.add(line)
        self.add(dot)
        self.wait(15)
        currp = [-2,2]
        funct_coords = []
        for t in np.arange(0,1,0.1):
            dotp = dot.get_center()
            dotp[0]=dotp[0]+0.1
            dotp[1]=dotp[1]-0.1
            currp = [currp[0]+0.2,currp[1]-0.2]
            ndot = Dot(dotp)
            curr_vec = Vector(np.array([currp[1]/2,currp[0]/2]),color=BLUE)
            ndotp = dot.get_center()
            ndotp[0]=(dotp[0]+currp[1]/4)
            ndotp[1]=(currp[0]/4+dotp[1])
            ndot2 = Dot(ndotp)
            funct_coords.append([t,0])
            curr_vec.move_to(ndot2)
            self.play(Create(curr_vec),run_time = 0.25)
            self.play(dot.animate.move_to(ndot),run_time = 0.25)     
            self.remove(curr_vec)
        self.wait(1)
        tex3 = Tex(r"$\int_{(-2,2)_{p_{1}}}^{(0,0)} \vec{F} dr = 0$",font_size=50).shift(2*RIGHT+UP) 
        self.play(Write(tex3),run_time=3)
        self.wait(3)
        p1 = np.array([-1-3.5,1,0])
        p2 = np.array([-3.5,0,0])
        arc1 = ArcBetweenPoints(p1,p2,TAU/2,color=GREEN)
        self.play(Create(arc1),run_time=4)
        tex4=Tex(r"$\int_{(-2,2)_{p_{2}}}^{(0,0)} \vec{F} dr = 0$",font_size=50).shift(2*RIGHT)
        dot.move_to(np.array([-1-3.5,1,0]))
        self.wait(3)
        vec2 = VMobject()
        vec2.add_updater(lambda x:x.become(Vector(np.array([dot.get_center()[1],dot.get_center()[0]+3.5])).set_color(BLUE).move_to(np.array([dot.get_center()[0]+dot.get_center()[1]/2,dot.get_center()[1]+dot.get_center()[0]/2+7/4,0]))))
        self.add(vec2)
        self.play(MoveAlongPath(dot, arc1), run_time=5)
        self.play(Write(tex4))
        self.wait(7)
        self.play(Uncreate(VGroup(*arc1,*dot,*tex4,*tex3,*line,*plane,*v1)))
        tex8=Tex(r"Now why is this theorem true?",color=YELLOW).shift(3*UP)
        tex9=Tex(r"In other words why is it that $\int_{P} \vec{F} \cdot \vec{dr}=f(p_{2})-f(p_{1})$").shift(2*UP)
        tex10=Tex(r"Where $\vec{F} = \nabla f$").shift(1.5*UP)
        self.play(Write(tex8),run_time=3)
        self.play(Write(tex9),run_time=5)
        self.play(Write(tex10),run_time=5)
        tex11=Tex(r"Let us first start with some basic building blocks").shift(UP)
        self.play(Write(tex11),run_time=2)
        tex12=Tex(r"Say that $\vec{r}(t)=x(t) \hat{i}+y(t) \hat{j}+z(t) \hat{k}$ where $\vec{r}(t)$ represents our position over time",font_size=30)
        tex13=Tex(r"And say that $\vec{F}=\nabla f$ where f is the gradient function of the vector field F",font_size=30).shift(DOWN)
        self.play(Write(tex12),run_time=5)
        self.wait(7)
        self.play(Write(tex13),run_time=5)
        self.wait(7)
        self.play(Uncreate(VGroup(*tex8,*tex9,*tex10,*tex11)))
        self.play(tex12.animate.shift(2*UP))
        self.play(tex13.animate.shift(2*UP))
        tex14=Tex(r"Then $\int_{P} \vec{F} \cdot \vec{dr}=\int_{P} (\nabla f) \cdot \vec{dr}$",font_size=30)
        self.play(Write(tex14,run_time=3))
        self.wait(7)
        tex15=Tex(r"=$\int_{a}^{b} \nabla f(\vec{r}(t)) \cdot \vec{r}'(t) dt$",font_size=30).shift(DOWN)
        self.play(Write(tex15,run_time=3))
        self.wait(7)
        tex16=Tex(r"=$\int_{a}^{b} (\frac{\partial f}{\partial x} \frac{dx}{dt}+\frac{\partial f}{\partial y} \frac{dy}{dt}+\frac{\partial f}{\partial z} \frac{dz}{dt}) dt$",font_size=30).shift(2*DOWN)
        self.play(FadeIn(tex16,run_time=3))
        self.wait(10)
        tex17=Tex(r"=$\int_{a}^{b} (\frac{\partial f}{\partial x} \frac{dx}{dt}+\frac{\partial f}{\partial y} \frac{dy}{dt}+\frac{\partial f}{\partial z} \frac{dz}{dt})dt=\int_{a}^{b} \frac{d}{dt}[f(\vec{r}(t))] dt=f(\vec{r}(b))-f(\vec{r}(a))$",font_size=30).shift(3*DOWN)
        self.play(Write(tex17,run_time=3))
        self.wait(15)

class TevinProblem(Scene):
    def construct(self):
        plane=NumberPlane()
        self.add(plane)
        tev = ImageMobject("assets/tevin.png").scale(0.1).shift(RIGHT)
        twice = ImageMobject("assets/twice.png").scale(0.1).shift(LEFT)
        origin = Dot(np.array([0,0,0]))
        self.add(origin)
        for i in range(-7,7):
            for j in range(-3,3):
                if ((i==1 and j==0)or(i==-1 and j==0) or (i==0 and j==0)):
                    continue
                mag = (math.sqrt(i*i+j*j))**3
                vec = Vector(np.array([-2*i/mag,-2*j/mag]),color=YELLOW).move_to(np.array([i-i/mag,j-j/mag,0]))
                self.add(vec)
        self.add(tev)
        self.add(twice)


class Multi(Scene):
    def construct(self):
        tex1 = Tex("A vector field F is conservative if....",font_size=50)
        self.play(Write(tex1))
        self.wait(2.5)
        tex2 = Tex(r"$\exists$ a function f such that $\nabla f=\vec{F}$",font_size=50)
        self.play(FadeTransform(tex1,tex2), stretch=True)
        self.wait(3.5)
        self.play(FadeOut(tex2))
        tex3 = Tex(r"Now how do we find if a vector field F has a corresponding function f for which $\nabla f=\vec{F}$?",font_size=25)
        self.play(Write(tex3))
        self.wait(4.5)
        tex4 = Tex(r"Let's first take the case where $\vec{F}$ is a 2 dimensional vector field",font_size=50)
        self.play(FadeTransform(tex3,tex4), stretch=True)
        self.wait(3.5)
        self.play(FadeOut(tex4))
        tex5 = Tex(r"If $\vec{F}$ is 2 dimensional then $\vec{F}=\text{N} \hat{i}+\text{M} \hat{j}$",font_size=50).shift(2*UP)
        tex6 = Tex(r"Say $\exists$ f such that $\nabla f=\vec{F}$",font_size=50).shift(UP)
        tex7 = Tex(r"Then $\frac{\partial f}{\partial x} = N$ and $\frac{\partial f}{\partial y} = M$",font_size=50)
        tex8 = Tex(r"Since $\frac{\partial f}{\partial x \partial y}=\frac{\partial f}{\partial y \partial x}$",font_size=50).shift(DOWN)
        tex9 = Tex(r"Then that must mean $\frac{\partial N}{\partial y} = \frac{\partial M}{\partial x}$",font_size=50).shift(2*DOWN)
        self.play(Write(tex5))
        self.wait(2.5)
        self.play(FadeIn(tex6))
        self.wait(2.5)
        self.play(Write(tex7))
        self.wait(2.5)
        self.play(FadeIn(tex8))
        self.wait(2.5)
        self.play(FadeIn(tex9))
        tgroup1 = [tex5,tex6,tex7,tex8,tex9]
        vgroup1 = VGroup(*tgroup1)
        self.play(FadeOut(vgroup1))
        tex10 = Tex(r"We can say that $\vec{F}=N \hat{i}+ M \hat{j}$ is conservative if:", font_size=50, color=YELLOW).shift(UP)
        tex11 = Tex(r"$\frac{\partial N}{\partial y} = \frac{\partial M}{\partial x}$", font_size=50)
        self.play(Write(tex10))
        self.wait(3.5)
        self.play(Write(tex11))
        self.wait(2.5)
        self.play(FadeOut(tex10))
        self.play(FadeOut(tex11))
        tex12 = Tex(r"How about the case where the vector field F is 3 dimensional? How do we figure out if its conservative?", color=YELLOW,font_size=25)
        self.play(Write(tex12))
        self.play(tex12.animate.shift(2*UP))
        self.wait(2.5)
        tex13 = Tex(r"To solve this conundrum, we introduce a new operator called curl", font_size=25)
        self.play(Write(tex13))
        self.play(tex13.animate.shift(UP))
        self.wait(2.5)
        self.play(Uncreate(tex12))
        self.play(Uncreate(tex13))
        tex14 = Tex(r"The curl of $\vec{F}(x,y,z) = F_{x} \hat{i}+ F_{y} \hat{j} + F_{z} \hat{k}$ is:")
        tex15 = Tex(r"curl $\vec{F} = \begin{bmatrix} \hat{i} & \hat{j} & \hat{k}\\ \frac{\partial}{\partial x} & \frac{\partial}{\partial y} & \frac{\partial}{\partial z}\\ F_{x} & F_{y} & F_{z} \end{bmatrix}$")
        self.play(Create(tex14))
        self.play(tex14.animate.shift(2*UP))
        self.wait(4.5)
        self.play(Write(tex15))
        self.wait(3.5)
        self.play(Uncreate(tex14))
        self.play(tex15.animate.shift(2*UP))
        tex16 = Tex(r"So curl $\vec{F} = (\frac{\partial F_{z}}{\partial y} - \frac{\partial F_{y}}{\partial z}) \hat{i} + (\frac{\partial F_{x}}{\partial z} - \frac{\partial F_{z}}{\partial x}) \hat{j} + (\frac{\partial F_{y}}{\partial x} - \frac{\partial F_{x}}{\partial y}) \hat{k}$")
        self.play(Write(tex16))
        self.wait(2.5)
        tex17 = Tex(r"We say that $\vec{F}$ is conservative if the curl $\vec{F}$ is $\vec{0}$").shift(DOWN)
        self.play(Write(tex17))
        self.wait(9) 
        self.play(Uncreate(tex17))
        self.play(FadeOut(tex15))
        tex18 = Tex(r"curl $\vec{F} = (\frac{\partial F_{z}}{\partial y} - \frac{\partial F_{y}}{\partial z}) \hat{i} + (\frac{\partial F_{x}}{\partial z} - \frac{\partial F_{z}}{\partial x}) \hat{j} + (\frac{\partial F_{y}}{\partial x} - \frac{\partial F_{x}}{\partial y}) \hat{k}$")
        self.wait(4.5)
        self.play(FadeTransform(tex16,tex18))
        self.play(tex18.animate.shift(2*UP))
        tex19 = Tex(r"If curl $\vec{F}=\vec{0}$ then:").shift(UP)
        self.play(Write(tex19))
        tex20 = Tex(r"$\frac{\partial F_{z}}{\partial y}=\frac{\partial F_{y}}{\partial z}$")
        tex21 = Tex(r"$\frac{\partial F_{z}}{\partial x}=\frac{\partial F_{x}}{\partial z}$")
        tex22 = Tex(r"$\frac{\partial F_{y}}{\partial x}=\frac{\partial F_{x}}{\partial y}$")
        self.play(Write(tex20))
        self.wait(2.5)
        self.play(tex20.animate.shift(2*DOWN))
        self.play(Write(tex21))
        self.wait(2.5)
        self.play(tex21.animate.shift(DOWN))
        self.play(Write(tex22))
        self.wait(2.5)
        tgroup2 = [tex19,tex20,tex21,tex22]
        vgroup2 = VGroup(*tgroup2)
        self.play(Uncreate(tex18))
        self.play(vgroup2.animate.shift(3*LEFT))
        tex23 = Tex(r"What do these equations remind us of?").shift(2*UP)
        self.play(Write(tex23))
        tex24 = Tex(r"For a function f(x,y,z):").shift(3*RIGHT+UP)
        tex25 = Tex(r"$\frac{\partial f}{\partial x \partial y}=\frac{\partial f}{\partial y \partial x}$").shift(3*RIGHT)
        tex26 = Tex(r"$\frac{\partial f}{\partial x \partial z}=\frac{\partial f}{\partial z \partial x}$").shift(3*RIGHT+DOWN)
        tex27 = Tex(r"$\frac{\partial f}{\partial y \partial z}=\frac{\partial f}{\partial z \partial y}$").shift(3*RIGHT+2*DOWN)
        self.play(FadeIn(tex24))
        self.play(Write(tex25))
        self.wait(2.5)
        self.play(Write(tex26))
        self.wait(2.5)
        self.play(Write(tex27))
        self.wait(2.5)
        tgroup3 = [tex23, tex20, tex21, tex22, tex19, tex24,tex25,tex26,tex27]
        vgroup3 = VGroup(*tgroup3)
        self.play(FadeOut(vgroup3))
        tex28 = Tex(r"Generalizing to n dimensions, we say an n-dimensional vector field F is conservative if:", font_size=30)
        tex29 = Tex(r"$\nexists$ i,j $\in [1 \dots n]$ such that $\frac{\partial F_{a_{j}}}{\partial a_{i}} \neq \frac{\partial F_{a_{i}}}{\partial a_{j}}$")
        tex30 = Tex(r"Where $a_{i}$ and $a_{j}$ are the i-th and j-th dimension respectively").shift(DOWN)
        self.play(FadeIn(tex28))
        self.play(tex28.animate.shift(UP))
        self.play(Write(tex29))
        self.wait(2.5)
        self.play(Write(tex30))
        self.wait(2.5)
        tgroup4 = [tex28,tex29,tex30]
        vgroup4 = VGroup(*tgroup4)
        self.play(FadeOut(vgroup4))
        tex31 = Tex(r"Fundamental Theorem of Line Integrals",color=YELLOW)
        self.play(Write(tex31))
        self.play(tex31.animate.shift(2*UP))
        tex32 = Tex(r"For any smooth path P from points $p_{1}$ to $p_{2}$").shift(UP)
        tex33 = Tex(r"and for any conservative vector field $\vec{F}$ where $\nabla f=\vec{F}$,")
        tex34 = Tex(r"The line integral $\int_{P} \vec{F} \cdot \vec{dr}=f(p_{2})-f(p_{1})$").shift(DOWN)
        self.play(Write(tex32))
        self.wait(2.5)
        self.play(Write(tex33))
        self.wait(2.5)
        self.play(Write(tex34))
        self.wait(2.5)
        






        
        
        

